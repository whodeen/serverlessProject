Comment: A step function to send reminder email after 24 hours
StartAt: addEmailToDb
States:
  addEmailToDb:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName:
        {
          'Fn::Join':
            [
              ':',
              [
                'arn:aws:lambda:us-east-1',
                {'Ref': 'AWS::AccountId'},
                'function:${self:service}-${self:provider.stage}-addSignUp',
              ],
            ],
        }
      Payload:
        Input.$: '$'
    Next: wait for 24hr
  wait for 24hr:
    Type: Wait
    Seconds: 86400
    Next: Read DB
  Read DB:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName:
        {
          'Fn::Join':
            [
              ':',
              [
                'arn:aws:lambda:us-east-1',
                {'Ref': 'AWS::AccountId'},
                'function:${self:service}-${self:provider.stage}-getSignUp',
              ],
            ],
        }
      Payload:
        Input.$: '$'
    Next: has played
  has played:
    Type: Choice
    Choices:
      - Variable: '$.Payload.played'
        StringEquals: 'true'
        Next: close
    Default: send reminder email
  send reminder email:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName:
        {
          'Fn::Join':
            [
              ':',
              [
                'arn:aws:lambda:us-east-1',
                {'Ref': 'AWS::AccountId'},
                'function:${self:service}-${self:provider.stage}-sendReminderEmail',
              ],
            ],
        }
      Payload:
        Input.$: '$'
    Next: close
  close:
    Type: Succeed
